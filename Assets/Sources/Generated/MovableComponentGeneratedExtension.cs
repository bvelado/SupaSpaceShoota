//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {
    public partial class Entity {
        public MovableComponent movable { get { return (MovableComponent)GetComponent(ComponentIds.Movable); } }

        public bool hasMovable { get { return HasComponent(ComponentIds.Movable); } }

        public Entity AddMovable(UnityEngine.Vector2 newVelocity, UnityEngine.Vector2 newMaxVelocity, UnityEngine.Vector2 newAcceleration) {
            var component = CreateComponent<MovableComponent>(ComponentIds.Movable);
            component.velocity = newVelocity;
            component.maxVelocity = newMaxVelocity;
            component.acceleration = newAcceleration;
            return AddComponent(ComponentIds.Movable, component);
        }

        public Entity ReplaceMovable(UnityEngine.Vector2 newVelocity, UnityEngine.Vector2 newMaxVelocity, UnityEngine.Vector2 newAcceleration) {
            var component = CreateComponent<MovableComponent>(ComponentIds.Movable);
            component.velocity = newVelocity;
            component.maxVelocity = newMaxVelocity;
            component.acceleration = newAcceleration;
            ReplaceComponent(ComponentIds.Movable, component);
            return this;
        }

        public Entity RemoveMovable() {
            return RemoveComponent(ComponentIds.Movable);
        }
    }

    public partial class Matcher {
        static IMatcher _matcherMovable;

        public static IMatcher Movable {
            get {
                if (_matcherMovable == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.Movable);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherMovable = matcher;
                }

                return _matcherMovable;
            }
        }
    }
}
